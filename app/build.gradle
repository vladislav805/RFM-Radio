apply plugin: 'com.android.application'

def versionMajor = 0
def versionMinor = 6
def versionPatch = 3

def dev = false

android {
    compileSdk 34
    namespace "com.vlad805.fmradio"

    defaultConfig {
        //noinspection GroovyAssignabilityCheck
        applicationId dev ? "com.vlad805.fmradio.dev" : "com.vlad805.fmradio"
        minSdkVersion 21
        //noinspection ExpiredTargetSdkVersion
        targetSdkVersion 34
        //noinspection GroovyAssignabilityCheck
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        //noinspection GroovyAssignabilityCheck
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    }

    buildTypes {
        release {
            //noinspection GroovyAssignabilityCheck
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        buildConfig = true
    }

    //noinspection GroovyMissingReturnStatement
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11 // Or VERSION_17
        targetCompatibility JavaVersion.VERSION_11 // Or VERSION_17
    }

    afterEvaluate {
        tasks.withType(JavaCompile).configureEach {
            // Emit basic deprecation notes
            options.deprecation = true
            // Emit full @Deprecated usage details
            options.compilerArgs += ['-Xlint:deprecation']
            // If you also care about unchecked warnings:
            options.compilerArgs += ['-Xlint:unchecked']
        }
    }


    productFlavors {
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
    }

    //noinspection GroovyMissingReturnStatement

    applicationVariants.configureEach { variant ->
        variant.outputs.configureEach {
            outputFileName = "${defaultConfig.applicationId}-${variant.versionName}.apk"
        }
    }

}

configurations.configureEach {
    resolutionStrategy {
        // Force all kotlin standard library artifacts to a consistent version
        // Use the version compatible with your androidx libraries (1.8.10 seems likely based on error)
        force "org.jetbrains.kotlin:kotlin-stdlib:1.8.10"
        force "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.10"
        force "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.10"

        // You can likely remove the old com.android.support rule now
        // eachDependency { DependencyResolveDetails details ->
        //     def requested = details.requested
        //     if (requested.group == "com.android.support") {
        //         if (!requested.name.startsWith("multidex")) {
        //             details.useVersion "26.+"
        //         }
        //     }
        // }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // Example Updates (check for latest stable versions!)
    implementation 'androidx.core:core-ktx:1.10.1' // Use ktx version if converting to Kotlin later, or core:1.10.1
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.3.1'
    implementation 'androidx.annotation:annotation:1.6.0'
    implementation 'androidx.preference:preference-ktx:1.2.1' // Use ktx version if converting to Kotlin later, or preference:1.2.1
    implementation 'androidx.media:media:1.6.0'
    implementation 'com.github.naman14:TAndroidLame:1.1' // Check if this still works/is maintained
    implementation 'com.github.atsushi-ageet:tray:0.14.0' // Check for updates
}
